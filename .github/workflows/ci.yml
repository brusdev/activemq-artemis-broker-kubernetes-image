name: CI

env:
  IMAGE_NAME: activemq-artemis-broker-kubernetes

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Install prerequisites
        run: >
          sudo apt-get install gcc libkrb5-dev &&
          sudo pip install docker docker-squash cekit odcs[client]

      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Build the image
        run: "cekit --verbose build docker --tag $IMAGE_NAME:dev.latest"

      - name: Check the image
        run: >
          export CONTAINER_ID=$(docker run --detach --env AMQ_USER=admin --env AMQ_PASSWORD=admin $IMAGE_NAME:dev.latest) &&
          echo CONTAINER_ID=$CONTAINER_ID && sleep 3 &&
          export CONTAINER_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $CONTAINER_ID) &&
          echo CONTAINER_IP=$CONTAINER_IP &&
          docker cp $CONTAINER_ID:/opt/amq ./ &&
          ./amq/bin/artemis check queue --name TEST --produce 1000 --browse 1000 --consume 1000 --user admin --password admin --url tcp://$CONTAINER_IP:61616 &&
          docker kill $CONTAINER_ID

      - name: Push the image
        if: ${{ github.event_name == 'push' }}
        run: >
          export IMAGE_TAG=dev.$(date +%Y%m%d).$(git rev-parse --short "$GITHUB_SHA") &&
          docker login quay.io --username=${{ secrets.QUAY_USERNAME }} --password-stdin <<< ${{ secrets.QUAY_PASSWORD }} &&
          docker tag $IMAGE_NAME:dev.latest quay.io/${{ secrets.QUAY_NAMESPACE }}/$IMAGE_NAME:$IMAGE_TAG &&
          docker push quay.io/${{ secrets.QUAY_NAMESPACE }}/$IMAGE_NAME:$IMAGE_TAG &&
          docker tag $IMAGE_NAME:dev.latest quay.io/${{ secrets.QUAY_NAMESPACE }}/$IMAGE_NAME:dev.latest &&
          docker push quay.io/${{ secrets.QUAY_NAMESPACE }}/$IMAGE_NAME:dev.latest
